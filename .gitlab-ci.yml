image: docker:stable

variables:
  DOCKER_DRIVER: overlay2
  MAVEN_OPTS: "-Djava.awt.headless=true -Dmaven.repo.local=./.m2 -Dsonar.host.url=$SONAR_HOST_URL -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
  CNR_MAVEN_VERSION: 3.4.0
  MAVEN_CLI_OPTS: "-s .m2/settings.xml -Dmaven.repo.local=./.m2/repository -Dnexus.url=$NEXUS_URL -Dnexus.login=$NEXUS_USERNAME -Dnexus.pwd=$NEXUS_PASSWORD -Drepository.base.url=$CMIS_BASE_URL -Dsiper.url=$SIPER_URL -Dsiper.username=$SIPER_USERNAME -Dsiper.password=$SIPER_PASSWORD -Dpec.username=$PEC_USERNAME -Dpec.password=$PEC_PASSWORD -Djava.awt.headless=true --batch-mode --errors --fail-at-end --show-version"
  MAVEN_CLI_CENTRAL_OPTS: "-s .m2/settings.xml -Dmaven.repo.local=./.m2/repository -Pmaven-central -Dnexus.url=$NEXUS_URL -Dsonatype.login=$SONATYPE_USERNAME -Dsonatype.pwd=$SONATYPE_PASSWORD -DskipTests --batch-mode --errors --fail-at-end --show-version"
  CONTAINER_TEST_IMAGE: $CI_PROJECT_PATH:$CI_COMMIT_REF_NAME
  CONTAINER_RELEASE_IMAGE: $CI_PROJECT_PATH:latest


stages:
  - test
  - release

test:
  stage: test
  image: docker.si.cnr.it/cnr-maven:$CNR_MAVEN_VERSION
  script:
    - mvn -B clean compile
  allow_failure: true

perform-maven-release-maven-central:
  stage: release
  image: maven:alpine
  script:
    - 'which git || (apk add --update git && rm -rf /var/cache/apk/*)'
    # Install ssh-agent if not already installed, it is required by Docker.
    # (change apt-get to yum if you use a CentOS-based image)
    - 'which ssh-agent || ( apk add --update openssh-client && rm -rf /var/cache/apk/*)'
    - 'which nodejs || (apk add --update nodejs nodejs-npm && rm -rf /var/cache/apk/*)'
    # Run ssh-agent (inside the build environment)
    - eval $(ssh-agent -s)

    # Add the SSH key stored in GIT_SSH_PRIV_KEY variable to the agent store
    - ssh-add <(echo "$GIT_SSH_PRIV_KEY")

    # For Docker builds disable host key checking. Be aware that by adding that
    # you are susceptible to man-in-the-middle attacks.
    # WARNING: Use this only with the Docker executor, if you use it with shell
    # you will overwrite your user's SSH config.
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - git config --global user.email "marco.spasiano@cnr.it"
    - git config --global user.name "marco.spasiano"
    - git checkout -B "$CI_BUILD_REF_NAME"

    # Add gpg private key
    - 'which gnupg || ( apk add --update gnupg && rm -rf /var/cache/apk/*)'
    - gpg -v --list-keys
    - echo "pinentry-mode loopback" > /root/.gnupg/gpg.conf
    - echo "allow-loopback-pinentry" > /root/.gnupg/gpg-agent.conf
    - gpg --batch --import <(echo "$GPG_PRIVATE_KEY")
    - mvn release:clean release:prepare -Darguments="-Dgpg.passphrase=$GPG_PASSPHRASE -DskipTests" -Dresume=false -B $MAVEN_CLI_CENTRAL_OPTS
    - mvn release:perform -Darguments="-Dgpg.passphrase=$GPG_PASSPHRASE -DskipTests" -Dresume=false -B $MAVEN_CLI_CENTRAL_OPTS
  only:
    variables:
      - $CI_COMMIT_MESSAGE !~ /prepare release/ && $CI_COMMIT_MESSAGE !~ /prepare for next development iteration/
    refs:
      - master
  when: manual

